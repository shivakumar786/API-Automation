{
  "guest_count": {
    "today": "select count(*) from reservationguest rg join reservation r on rg.reservationid = r.reservationid where r.shipcode = '{}' and rg.embarkdate = '{}' and rg.reservationstatuscode <> '{}';",
    "cnc": "select count(rg.reservationguestid) as total, Sum(case when g.citizenshipcountrycode ='US' then 1 else 0 end ) selectedCountryGuest, Sum(case when g.citizenshipcountrycode='US' then 0 else 1 end ) selectedNonCountryGuest,Sum(hasSpecialneed) as specialNeedGuest from reservationguest rg join  reservation r on rg.reservationid =r.reservationid join guest g on rg.guestid = g.guestid left join (select sn.reservationguestid, 1 hasSpecialneed  from  guestspecialneed sn where sn.isdeleted = false group by sn.reservationguestid ) sn  on sn.reservationguestid = rg.reservationguestid where r.shipcode= '{}' and rg.embarkdate < '{}' and rg.debarkdate > '{}'and g.isdeleted = false and rg.reservationstatuscode <> '{}';",
    "pid": "select rg.reservationGuestId FROM ReservationGuest rg join Reservation r on r.reservationId = rg.reservationId JOIN Guest g on g.guestId = rg.guestId and rg.reservationStatusCode <> '{}' AND  g.isDeleted = false  where rg.embarkDate < '{}' and rg.debarkDate > '{}' and r.shipCode = '{}'",
    "count": "select sum (case when cs.status='COMPLETED' then 1 else 0 end) checkedIn,sum (case when cs.status='COMPLETED' and (bs.status='ASHORE' or bs.status is null) then 1 else 0 end) checkedInAshore,sum(case when cs.status='COMPLETED' and bs.status='ONBOARD' then 1 else 0 end) checkedInOnboard,sum(case when bs.status = 'ONBOARD' and bs.debarkdate = '{}' then 1 else 0 end) yetToDebark,sum(case when ((bs.status ='ASHORE' or bs.status is null) and cs.status='COMPLETED') or (bs.status='ASHORE' and cs.status is null) then 1 else 0 end) ashore,sum (case when bs.status ='ONBOARD' then 1 else 0 end) onboard from (select * from personstatus where personId in {} and statustypecode = '{}' and isdeleted = false) bs  full join (select * from personstatus where personId in {} and statustypecode = '{}' and isdeleted = false)  cs on cs.personid = bs.personid  where (cs.isdeleted = false or cs.isdeleted is null) and (bs.isdeleted = false or bs.isdeleted is null) and (bs.embarkdate < '{}' or cs.embarkdate < '{}') and (bs.debarkdate > '{}'or cs.debarkdate > '{}') and (bs.shipcode= '{}' or cs.shipcode= '{}');",
    "cin": "select rg.reservationGuestId FROM ReservationGuest rg join Reservation r on r.reservationId = rg.reservationId JOIN Guest g on g.guestId = rg.guestId and rg.reservationStatusCode <> '{}' AND g.isDeleted = false and r.shipCode = '{}' and embarkdate = '{}' and debarkdate = '{}';",
    "n_cin": "select distinct(cs.personid) from personstatus cs where cs.personId in {} and cs.shipcode ='{}' and cs.isdeleted = false and cs.statustypecode = '{}' and cs.status = 'COMPLETED';"
  },
  "crew_count": {
  },
  "visitor_count": {
  },
  "guest_core_count": {
    "onboard": "select count(*) from personstatus p1\njoin personstatus p2 on p1.personid =p2.personid \njoin reservationguest rg  on p1.personid = rg.reservationguestid  and p1.persontypecode ='RG'\njoin reservation r on r.reservationid =rg.reservationid \njoin guest g on g.guestid =rg.guestid \nwhere p1.statustypecode ='TC'\nand p2.status ='ONBOARD' and p2.statustypecode ='BS'\nand rg.embarkdate ='{}';",
    "check_in": "select count(*) from personstatus p \njoin reservationguest rg  on p.personid = rg.reservationguestid  and p.persontypecode ='RG'\njoin reservation r on r.reservationid =rg.reservationid \njoin guest g on g.guestid =rg.guestid \nwhere p.statustypecode ='TC' and p.status ='COMPLETED' and rg.embarkdate ='{}';",
    "leaving": "select count(*) from personstatus p1\njoin personstatus p2 on p1.personid =p2.personid \njoin reservationguest rg  on p1.personid = rg.reservationguestid  and p1.persontypecode ='RG'\njoin reservation r on r.reservationid =rg.reservationid \njoin guest g on g.guestid =rg.guestid \nwhere p1.statustypecode ='TC' and p1.status = 'COMPLETED'\nand p2.status ='ONBOARD' and p2.statustypecode ='BS'\nand rg.debarkdate ='{}';"
  },
  "crew_core_count": {
    "onboard": "select count(*) from teammember t join personstatus ps on t.teammemberid=ps.personid::uuid and ps.persontypecode ='C' and ps.statustypecode ='BS' and ps.status ='ONBOARD' group by t.teammembernumber;",
    "check_in": "select count(*) from teammember t join personstatus ps on t.teammemberid=ps.personid::uuid and ps.persontypecode ='C' and ps.statustypecode ='TC' and ps.status ='COMPLETED' and t.isdeleted = false group by t.teammembernumber;",
    "leaving": "select count(*) , t.teammembernumber from teammember t join personstatus ps on t.teammemberid=ps.personid::uuid and ps.persontypecode ='C' and ps.statustypecode ='TC' and ps.status ='COMPLETED' and t.isdeleted = false join personstatus pbs on pbs.personid::uuid = t.teammemberid and t.isdeleted = false and pbs.persontypecode = 'C' and pbs.statustypecode = 'BS' and pbs.status = 'ASHORE' group by t.teammembernumber;",
    "ashore": "select count(*) , t.teammembernumber from teammember t join personstatus ps on t.teammemberid=ps.personid::uuid and ps.persontypecode ='C' and ps.statustypecode ='TC' and ps.status ='COMPLETED' and t.isdeleted = false join personstatus pbs on pbs.personid::uuid = t.teammemberid and t.isdeleted = false and pbs.persontypecode = 'C' and pbs.statustypecode = 'BS' and pbs.status = 'ASHORE' group by t.teammembernumber;"
  },
  "mxp_db_query": {
    "email_verification": "select Top 1 * from {}.dbo.Vcompare_Sailor_Crew_data where PERSON_TYPE = 'Guest' AND EMAIL = '{}'",
    "onboard": "select Top 1 * from {}.dbo.Vcompare_Sailor_Crew_data where PERSON_TYPE = 'Guest' AND EMAIL = '{}' AND ARRIVAL_STATUS = '1'",
    "verify_person_name": "SELECT PERSON_FIRST_NAME ,PERSON_LAST_NAME, PERSON_DOB FROM {}.dbo.Persons where GUID = '{}';",
    "verify_contact_info": "SELECT PERSON_PRIMARY_EMAIL ,PERSON_PRIMARY_PHONE FROM {}.dbo.Persons where GUID = '{}';",
    "verify_credit_card_info": "SELECT NAME_ON_CARD FROM {}.dbo.Person_Charge_Cards where NAME_ON_CARD = '{}';",
    "verify_aci_onboard_guest": "select count(*) from {}.dbo.Vcompare_Sailor_Crew_data where PERSON_TYPE = 'Guest' and ARRIVAL_DATE='{}' and STATUS = 'Confirmed';",
    "verify_sync": "SELECT PERSON_BOOKING_ID, PERSON_ID, BOOKING_REFERENCE, BOOKING_ROOM_NO, CRUISE_ID, ARRIVAL_DATE, CHECK_IN_SYNC, CHARGE_ID FROM {}.dbo.Person_Booking where GUID = '{}';"
  },
  "guest_onboard_status_db_core": {
    "onboard_status": "select p2.status from personstatus p1\njoin personstatus p2 on p1.personid =p2.personid \njoin reservationguest rg  on p1.personid = rg.reservationguestid  and p1.persontypecode ='RG' and rg.reservationguestid='{}'\njoin reservation r on r.reservationid =rg.reservationid \njoin guest g on g.guestid =rg.guestid \nwhere p1.statustypecode ='TC'\n and p2.statustypecode ='BS'\nand rg.embarkdate ='{}';"
  },
  "activity_verification": {
    "shore_ship_veri": "select a.code as activityCode,s.startdatetime::date as eventDate, count(1) as availableSlots\nfrom activity a\n       inner join activityslot s on a.activityid = s.activityid\nwhere a.isdeleted = false and s.isdeleted = false\n       and a.activitygroupcode in ('IET', 'NET', 'SET', 'HET')\n       and s.startdatetime > current_timestamp and s.enddatetime < (current_timestamp + interval '10' day )\ngroup by a.code, s.startdatetime::date order by eventDate asc;",
    "pa_ship_shore": "select a.code as activityCode,s.startdatetime::date as eventDate, count(1) as availableSlots\nfrom activity a\n       inner join activityslot s on a.activityid = s.activityid\nwhere a.isdeleted = false and s.isdeleted = false\n       and a.activitygroupcode in ('PA')\n       and s.startdatetime > current_timestamp and s.enddatetime < (current_timestamp + interval '10' day )\ngroup by a.code, s.startdatetime::date order by eventDate asc;",
    "spa": "select a.code as activityCode,s.startdatetime::date as eventDate, count(1) as availableSlots\nfrom activity a\n       inner join activityslot s on a.activityid = s.activityid\nwhere a.isdeleted = false and s.isdeleted = false\n       and a.activitygroupcode in ('SPA')\n       and s.startdatetime > current_timestamp and s.enddatetime < (current_timestamp + interval '10' day )\ngroup by a.code, s.startdatetime::date order by eventDate asc;",
    "entertainment": "select a.code as activityCode,s.startdatetime::date as eventDate, count(1) as availableSlots\nfrom activity a\n       inner join activityslot s on a.activityid = s.activityid\nwhere a.isdeleted = false and s.isdeleted = false\n       and a.activitygroupcode in ('ET')\n       and s.startdatetime > current_timestamp and s.enddatetime < (current_timestamp + interval '10' day )\ngroup by a.code, s.startdatetime::date order by eventDate asc;",
    "fitness": "select a.code as activityCode,s.startdatetime::date as eventDate, count(1) as availableSlots\nfrom activity a\n       inner join activityslot s on a.activityid = s.activityid\nwhere a.isdeleted = false and s.isdeleted = false\n       and a.activitygroupcode in ('FT')\n       and s.startdatetime > current_timestamp and s.enddatetime < (current_timestamp + interval '10' day )\ngroup by a.code, s.startdatetime::date order by eventDate asc;"
  },
  "guest_list": {
    "to_be_checkedin": "with cte as (SELECT r.reservationguestid, r.reservationid, r.guestid, r.isprimary, a.citizenshipcountrycode, a.firstname, a.lastname, a.email, a.gendercode, a.birthdate, row_number() over(partition by reservationid) AS rownum FROM public.reservationguest r, public.guest a where r.guestid = a.guestid and embarkdate = '{}' and debarkdate ='{}' and reservationstatuscode = 'RS' and stateroom!= 'GTY') select reservationguestid, reservationid, guestid, isprimary, citizenshipcountrycode, firstname, lastname, email, gendercode, birthdate from cte where reservationid in (select reservationid  from cte where rownum > 1);"
  }
}